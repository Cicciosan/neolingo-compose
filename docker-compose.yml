services:

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      #- "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - neolingo-frontend
    networks:
      - internal

  post-service:
    image: ghcr.io/cicciosan/post-service
    container_name: post-service
    depends_on:
      - post-service-db
      - auth-server
    restart: always
    volumes:
      - post_service_volume:/root
    networks:
      - internal
    ports:
      - "8080:8080" #TODO: mettere in expose

  post-service-db:
    image: postgres:latest
    container_name: post-service-db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: neolingo
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal
    expose:
      - "5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "81:81"
    networks:
      - internal
    volumes:
      - pg-admin:/var/lib/pgadmin
    depends_on:
      - post-service-db

  neolingo-frontend:
    image: ghcr.io/cicciosan/neolingo-frontend:latest
    container_name: neolingo-frontend
    depends_on:
      - post-service
      - auth-server
    networks:
      - internal
    expose:
      - "3000:3000"

  auth-server:
    image: keycloak/keycloak:latest
    container_name: auth-server
    environment:
#      KC_HOSTNAME: auth-server
      KC_HOSTNAME_PORT: 7080
#      KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:7080/health/ready"]
    #   interval: 15s
    #   timeout: 2s
    #   retries: 15
    command: ["start-dev", "--http-port", "7080", "--https-port", "7443"]
    depends_on:
     - auth-server-db
    ports:
      - "7080:7080"
      - "7443:7443"
    volumes:
      - auth-server:/opt/keycloak/data
    networks:
      - internal

#  auth-server-db:
#    image: postgres:latest
#    container_name: keycloak-db
#    environment:
#      - POSTGRES_DB=keycloak
#      - POSTGRES_USER=keycloak
#      - POSTGRES_PASSWORD=password
#    volumes:
#      - auth-server-db:/var/lib/postgresql/data


volumes:
  nginx:
  postgres_data:
  pg-admin:
  auth-server:
  auth-server-db:
  post_service_volume:

networks:
  internal:
    driver: bridge
